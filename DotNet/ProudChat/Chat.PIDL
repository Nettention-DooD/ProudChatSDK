/*
// Automatically generated code. DO NOT EDIT HERE BELOW
SETTINGS_BEGIN
SERVER_SOURCE_CODE: ..\ChatServerCode\ChatServerCode.cpp
CLIENT_SOURCE_CODE: ..\StressTest\StressTest.cs
GENERATE_CLIENT: false
SETTINGS_END
*/
 
// Add your RMI functions here by right-clicking on this. Check out 'Adding RMI function' in ProudNet Documentation web site.
rename cs(Proud::CFastArray<Proud::String>, System.Collections.Generic.List<System.String>);
rename cs(Proud::String, System.String);
rename cs(Proud::ErrorType, Nettention.Proud.ErrorType);
[marshaler(cs)=ProudChat.CustomMarshaler]
global ChatC2S 1000
{
	//Login
	Login_Request([in] Proud::String ownerUuid , [in] Proud::String projectUuid , [in] Proud::String uniqueId);
	
	//Send
	SendMsg([in] Proud::String destUniqueID , [in] Proud::String msg);
	ChannelMsg([in] Proud::String channelKey , [in] Proud::String msg);

	//Channel
	ChannelJoin([in] Proud::String channelKey);
	ChannelLeave([in] Proud::String channelKey);

	//etc
	//BlockMember_Request([in] Proud::String TargetUniqueId);
	//CancelBlockMember_Request([in] Proud::String TargetUniqueId);
	GetChannelList_Request();

	//Group Talk
	//GroupMsg([in] Proud::String groupKey , [in] Proud::String msg);

}
[marshaler(cs)=ProudChat.CustomMarshaler]
global ChatS2C 2000
{
	// Login 정보
	Login_Response([in] Proud::ErrorType errorType , [in] Proud::String filtering , [in] Proud::String msg);

	//Send
	SendMsg([in] Proud::String srcUniqueID , [in] Proud::String msg);
	ChannelMsg([in] Proud::String channelKey , [in] Proud::String srcUniqueID , [in] Proud::String msg);


	//Etc
	GetChannelList_Response([in] Proud::ErrorType errorType , [in] Proud::CFastArray<Proud::String> channelList);
	//BlockMember_Response([in] Proud::ErrorType errorType);
	//CancelBlockMember_Response([in] Proud::ErrorType errorType);

	//Event
	Event_Filtering([in] Proud::String filtering);
	Event_Notice([in] Proud::String context);


	//Group Talk
	//GroupMsg([in] Proud::String groupKey , [in] Proud::String srcUniqueID , [in] Proud::String msg);


}

